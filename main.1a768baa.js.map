{"version":3,"sources":["scripts/main.js"],"names":["minSize","maxSize","table","document","querySelector","tBody","tBodies","rows","appendRow","appendColumn","removeRow","removeColumn","addEventListener","appendChild","length","cloneNode","setAttribute","removeAttribute","remove","forEach","row","cells"],"mappings":";AAAA,aAgDA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9CA,IAAMA,EAAU,EACVC,EAAU,GAEVC,EAAQC,SAASC,cAAc,UAC/BC,EAAQH,EAAMI,QAAQ,GACtBC,EAAOF,EAAME,KAEbC,EAAYL,SAASC,cAAc,eACnCK,EAAeN,SAASC,cAAc,kBACtCM,EAAYP,SAASC,cAAc,eACnCO,EAAeR,SAASC,cAAc,kBAE5CI,EAAUI,iBAAiB,QAAS,WAClCP,EAAMQ,YAAYN,EAAKA,EAAKO,OAAS,GAAGC,WAAU,IAE9CR,EAAKO,SAAWb,GAClBO,EAAUQ,aAAa,WAAY,QAGrCN,EAAUO,gBAAgB,cAG5BP,EAAUE,iBAAiB,QAAS,WAClCL,EAAKA,EAAKO,OAAS,GAAGI,SAElBX,EAAKO,SAAWd,GAClBU,EAAUM,aAAa,WAAY,QAGrCR,EAAUS,gBAAgB,cAG5BR,EAAaG,iBAAiB,QAAS,WACjCL,EAAAA,GAAMY,QAAQ,SAAAC,GACVC,IAAAA,EAAQD,EAAIC,MAElBD,EAAIP,YAAYQ,EAAMA,EAAMP,OAAS,GAAGC,WAAU,MAGhDR,EAAK,GAAGc,MAAMP,SAAWb,GAC3BQ,EAAaO,aAAa,WAAY,QAGxCL,EAAaM,gBAAgB,cAG/BN,EAAaC,iBAAiB,QAAS,WACjCL,EAAAA,GAAMY,QAAQ,SAAAC,GACVC,IAAAA,EAAQD,EAAIC,MAElBA,EAAMA,EAAMP,OAAS,GAAGI,WAGtBX,EAAK,GAAGc,MAAMP,SAAWd,GAC3BW,EAAaK,aAAa,WAAY,QAGxCP,EAAaQ,gBAAgB","file":"main.1a768baa.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst minSize = 2;\nconst maxSize = 10;\n\nconst table = document.querySelector('.field');\nconst tBody = table.tBodies[0];\nconst rows = tBody.rows;\n\nconst appendRow = document.querySelector('.append-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeRow = document.querySelector('.remove-row');\nconst removeColumn = document.querySelector('.remove-column');\n\nappendRow.addEventListener('click', () => {\n  tBody.appendChild(rows[rows.length - 1].cloneNode(true));\n\n  if (rows.length === maxSize) {\n    appendRow.setAttribute('disabled', 'true');\n  }\n\n  removeRow.removeAttribute('disabled');\n});\n\nremoveRow.addEventListener('click', () => {\n  rows[rows.length - 1].remove();\n\n  if (rows.length === minSize) {\n    removeRow.setAttribute('disabled', 'true');\n  }\n\n  appendRow.removeAttribute('disabled');\n});\n\nappendColumn.addEventListener('click', () => {\n  [...rows].forEach(row => {\n    const cells = row.cells;\n\n    row.appendChild(cells[cells.length - 1].cloneNode(true));\n  });\n\n  if (rows[0].cells.length === maxSize) {\n    appendColumn.setAttribute('disabled', 'true');\n  }\n\n  removeColumn.removeAttribute('disabled');\n});\n\nremoveColumn.addEventListener('click', () => {\n  [...rows].forEach(row => {\n    const cells = row.cells;\n\n    cells[cells.length - 1].remove();\n  });\n\n  if (rows[0].cells.length === minSize) {\n    removeColumn.setAttribute('disabled', 'true');\n  }\n\n  appendColumn.removeAttribute('disabled');\n});\n"]}